"""
PROGRAM ; Longest Palindromic Substring.
Given a string s, return the longest 
palindromic substring in s.

Example 1:

Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.

Example 2:

Input: s = "cbbd"
Output: "bb"
 

Constraints:

1 <= s.length <= 1000
s consist of only digits and English letters.
"""

#PROGRAM CODE :
class Solution:
    def longestPalindrome(self, s: str) -> str:
        N = len(s)

        def LP(left, right):
            while right < N and left >= 0:
                if s[right] != s[left]:
                    break
                right += 1
                left -= 1
            return left + 1, right

        start, end = 0, 0

        for i in range(N):
            left, right = LP(i, i)
            if (right - 1) > (end - start):
                end = right
                start = left

            left, right = LP(i, i + 1)
            if (right - 1) > (end - start):
                end = right
                start = left

        return s[start:end]

# If you find any more Interesting Ways of solving this Problem, Kindly Text me.
# For Furthur Clarifications in Logic and Explanation of the Code, Feel Free to DM me :),
"""
Linkedin : https://www.linkedin.com/in/sathi-surya-ganesh-reddy-9b080925b
Email    : ssuryaganesh20@gmail.com
"""
