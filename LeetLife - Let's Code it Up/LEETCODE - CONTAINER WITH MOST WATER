"""
Problem : CONTAINER WITH MOST WATER

You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
Find two lines that together with the x-axis form a container, such that the container contains the most water.
Return the maximum amount of water a container can store.
Notice that you may not slant the container.

Example 1:
Input: height = [1,8,6,2,5,4,8,3,7]
Output: 49
Explanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.

Example 2:
Input: height = [1,1]
Output: 1
 
Constraints:
n == height.length
2 <= n <= 105
0 <= height[i] <= 104
"""

#PROGRAM CODE : 
class Solution:
    def maxArea(self, height: List[int]) -> int:
        start = 0
        end = len(height)-1
        largest = 0
        prev_start = 0
        prev_end = 0
        while start!=end:
            if height [start]<prev_start:
                start+=1
                continue
            if height [end]<prev_end:
                end -= 1
                continue
            next_area = min(height [start], height [end])*(end - start)
            if next_area > largest:
                largest = next_area
            if height [start] <height[end]:
                prev_start = height [start]
                start +=1
            else:
                prev_end = height [end]
                end -= 1
        return(largest)


# If you find any more Interesting Ways of solving this Problem, Kindly Text me.
# For Furthur Clarifications in Logic and Explanation of the Code, Feel Free to DM me :),
"""
Linkedin : https://www.linkedin.com/in/sathi-surya-ganesh-reddy-9b080925b
Email    : ssuryaganesh20@gmail.com
"""
